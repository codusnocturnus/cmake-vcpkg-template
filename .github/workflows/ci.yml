# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              name: 'windows-latest msvc',
              os: windows-latest,
              cc: 'cl',
              cxx: 'cl',
              environment_script: 'C:/"Program Files (x86)"/"Microsoft Visual Studio"/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat'
          }
          - {
            name: 'ubuntu-latest clang',
            os: ubuntu-latest,
            cc: 'clang',
            cxx: 'clang++'
          }

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: install dependencies (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: sudo apt-get install -y ninja-build

    - name: install dependencies (Windows)
      if: matrix.config.os == 'windows-latest'
      run: choco install ninja

    - name: CMake configure (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        mkdir -p build
        cd build
        export CC=${{ matrix.config.cc }}
        export CXX=${{ matrix.config.cxx }}
        cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DVCPKG_DISABLE_METRICS=ON -DVCPKG_DEVELOPMENT_WARNINGS=OFF -G Ninja ..

    - name: CMake configure (Windows)
      if: matrix.config.os == 'windows-latest'
      shell: cmd
      run: |
        mkdir -p build
        cd build
        call C:/"Program Files (x86)"/"Microsoft Visual Studio"/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
        set CC="${{ matrix.config.cc }}"
        set CXX="${{ matrix.config.cxx }}"
        cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DVCPKG_DISABLE_METRICS=ON -DVCPKG_DEVELOPMENT_WARNINGS=OFF -G Ninja ..

    - name: CMake build (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        cd build
        cmake --build .

    - name: CMake build (Windows)
      if: matrix.config.os == 'windows-latest'
      run: |
        cd build
        call C:/"Program Files (x86)"/"Microsoft Visual Studio"/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
        cmake --build .
